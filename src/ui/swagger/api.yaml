openapi: 3.0.0
info:
  version: 'v1'
  title: Account Service
  description: |
    This is the RESTful API documentation of the microservice for OCARIoT platform user account.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/nutes.ocariot/account-service/v1
  - description: Account Local HTTP Server
    url: http://localhost:5000
  - description: Account Local HTTPS Server
    url: https://localhost:5001

tags:
  - name: auth
    description: Operations for the user authentication in plataform.
  - name: users
    description: Operations for all plataform users.
  - name: users.children
    description: Operations for the Child resource.
  - name: users.families
    description: Operations for the Family resource.
  - name: users.families.children
    description: Operations for the Children associated with a family.
  - name: users.educators
    description: Operations for the Educator resource.
  - name: users.educators.children.groups
    description: Operations for the Children group resource associated with a Educator.
  - name: users.healthprofessionals
    description: Operations for the HealthProfessional resource.
  - name: users.healthprofessionals.children.groups
    description: Operations for Children Group resource, associated with a Health Professional.
  - name: users.applications
    description: Operations for the Application resource.

paths:
  # auth
  /auth:
    post:
      tags:
        - auth
      summary: Authenticate user on platform.
      operationId: auth
      description: |
        Retrieve a valid token to be used in requests.
        The authentication approach is following the specifications of JWT,
        which is a standard _[(RFC-7519)](https://tools.ietf.org/html/rfc7519)_ that defines how to transmit and store
        JSON objects in a compact and secure way between different applications.

        The token payload will include the following information _[(RFC-7519)](https://tools.ietf.org/html/rfc7519#page-8)_:
        - **sub** (subject) - Entity to which the token belongs, usually the user ID;
        - **iss** (issuer) - defines the issuer of the token;
        - **exp** (expiration) - Timestamp in seconds of when the token will expire;
        - **iat** (issued on) - Timestamp in seconds from when the token was created;
        - **escope** - Specifies the access scopes that the generated token has.

        Example of values that can make up the payload:
        ```javascript
        {
          "exp": 1543142660,
          "scope": "activities:read activities:register:remove",
          "sub": "USER_ID",
          "iss": "ocariot",
          "iat": 1543200269
        }
      responses:
        '200':
          description: User successfully authenticated.
          content:
            application/json:
              example:
                access_token: eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1NDMxNDI2NjAsInNjb3BlIjoiYWN0aXZpdGllczpyZWFkIGFjdGl2aXRpZXM6cmVnaXN0ZXI6cmVtb3ZlIiwic3ViIjoiVVNFUl9JRCIsImlzcyI6Im9jYXJpb3QiLCJpYXQiOjE1NDMyMDAyNjl9.Dj3nRRRtQIBRhb6UMNVNTnePI2s3JfCltU0dtR499IM

        '400':
          description: >-
            Request can not be met, syntactically incorrect or violates the
            schema. Normally it occurs due to validation issues, such as
            fields that are expected in the request body and not passed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the client
            for the application response. Only application/json is currently
            accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '415':
          description: >-
            The server does not support the requested payload format. Only
            application/json is accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              example:
                username: elvisaaron
                password: anypassword
        description: Data of the user to perform authentication.
        required: true
  /auth/revoke:
    post:
      tags:
        - auth
      summary: Revoke access token
      operationId: revokeAccessToken
      description: Revoking an access token means that the token will no longer function.
      requestBody:
        description: Access Token to be revoked.
        required: true
        content:
          application/json:
            schema:
              example:
                access_token: eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1NDMxNDI2NjAsInNjb3BlIjoiYWN0aXZpdGllczpyZWFkIGFjdGl2aXRpZXM6cmVnaXN0ZXI6cmVtb3ZlIiwic3ViIjoiVVNFUl9JRCIsImlzcyI6Im9jYXJpb3QiLCJpYXQiOjE1NDMyMDAyNjl9.Dj3nRRRtQIBRhb6UMNVNTnePI2s3JfCltU0dtR499IM
      responses:
        '200':
          description: |
            if it was successfully revoked or if the client sent an invalid.

            NOTE: Invalid tokens do not cause an error response because the purpose of the revocation request, invalidating the specific token, is already achieved.
        '400':
          description: >-
            Request can not be met, syntactically incorrect or violates the
            schema. Normally it occurs due to validation issues, such as
            fields that are expected in the request body and not passed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  # users
  /users/{user_id}:
    delete:
      tags:
        - users
      summary: Delete user data.
      description: Delete user informations.
      operationId: deleteUser
      parameters:
        - in: path
          name: user_id
          required: true
          description: Id of user.
          example: 5a62be07de34500146d9c544
          schema:
            type: string
      responses:
        '204':
          description: Operation performed successfully. There is no data to be returned.
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to delete user data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the
            client for the application response. Only application/json is
            currently accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users/{user_id}/password:
    patch:
      tags:
        - users
      summary: Update user password.
      description: Update the user password.
      operationId: updateUser
      parameters:
        - in: path
          name: user_id
          required: true
          description: Id of user.
          example: 5a62be07de34500146d9c544
          schema:
            type: string
      responses:
        '204':
          description: Operation performed successfully. There is no data to be returned.
        '400':
          description: >-
            Request can not be met, syntactically incorrect or violates the
            schema. Normally it occurs due to validation issues, such as fields
            that are expected in the request body and not passed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to update user data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the client
            for the application response. Only application/json is currently
            accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '415':
          description: >-
            The server does not support the requested payload format. Only
            application/json is accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                old_password:
                  type: string
                  example: 'old_password_here'
                new_password:
                  type: string
                  example: 'new_password_here'
        description: Old and new user password.
        required: true

  # users.children
  /users/children:
    post:
      tags:
        - users.children
      summary: Register a Child.
      operationId: saveChild
      description: |
        Register a new children.
      responses:
        '201':
          description: User saved sucessfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Child'
        '400':
          description: >-
            Request can not be met, syntactically incorrect or violates the
            schema. Normally it occurs due to validation issues, such as fields
            that are expected in the request body and not passed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to register users.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the
            client for the application response. Only application/json is
            currently accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: ->
            Conflicts have probably occurred with data that can not be duplicated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '415':
          description: >-
            The server does not support the requested payload format. Only
            application / json is accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        required: true
        description: Child to be insert.
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
                - gender
                - age
              properties:
                username:
                  type: string
                  description: Username for child authentication.
                  example: BR9999
                password:
                  type: string
                  description: Password for child authentication.
                  example: mys3cr3tp4ss
                institution_id:
                  type: string
                  format: uuid
                  description: Id of institution.
                  example: 5a62be07de34500146d9c624
                gender:
                  type: string
                  description: Gender of the child.
                  example: male
                age:
                  type: number
                  description: Age of the child.
                  example: 11
    get:
      tags:
        - users.children
      summary: Recover all children.
      operationId: getAllChildren
      description: |
        Returns a list with children.
        The query supports Field Selection, Paging and Sorting.
      parameters:
        - $ref: '#/components/parameters/fieldsParam'
        - $ref: '#/components/parameters/pageParam'
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/sortParam'
      responses:
        '200':
          description: Successful requisition.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Child'

        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to get users.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the
            client for the application response. Only application/json is
            currently accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users/children/{child_id}:
    get:
      tags:
        - users.children
      summary: Recover a child by id.
      operationId: getChildById
      description: Returns a unique child by id. The query supports field selection.
      parameters:
        - in: path
          name: child_id
          required: true
          description: Id of child.
          example: 5a62be07de34500146d9c544
          schema:
            type: string
        - $ref: '#/components/parameters/fieldsParam'
      responses:
        '200':
          description: Successful requisition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Child'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to get user data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the
            client for the application response. Only application/json is
            currently accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - users.children
      summary: Update children.
      description: Update the children data.
      operationId: updateChildById
      parameters:
        - in: path
          name: child_id
          required: true
          description: Id of child.
          example: 5a62be07de34500146d9c544
          schema:
            type: string
      responses:
        '200':
          description: Updated child data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Child'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to update user data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the client
            for the application response. Only application/json is currently
            accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: ->
            Conflicts have probably occurred with data that can not be duplicated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '415':
          description: >-
            The server does not support the requested payload format. Only
            application/json is accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: Username for child authentication.
                  example: elvisaaron
                gender:
                  type: string
                  description: Gender of the child. Can be male or female.
                  example: male
                  enum: [male, female]
                age:
                  type: number
                  description: Age of the child.
                  example: 11
                institution_id:
                  type: string
                  format: uuid
                  description: Id of institution.
                  example: 5a62be07de34500146d9c544
        description: Child data to be updated.
        required: true

  # users.educators
  /users/educators:
    post:
      tags:
        - users.educators
      summary: Register a Educator.
      operationId: saveEducator
      description: |
        Register a new Educator.
      responses:
        '201':
          description: User saved sucessfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Educator'
        '400':
          description: >-
            Request can not be met, syntactically incorrect or violates the
            schema. Normally it occurs due to validation issues, such as fields
            that are expected in the request body and not passed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to register users.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the
            client for the application response. Only application/json is
            currently accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: ->
            Conflicts have probably occurred with data that can not be duplicated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '415':
          description: >-
            The server does not support the requested payload format. Only
            application / json is accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        required: true
        description: Educator to be insert.
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                  description: Username for educator authentication.
                  example: elvisaaron
                password:
                  type: string
                  description: Password for educator authentication.
                  example: mys3cr3tp4ss
                institution_id:
                  type: string
                  format: uuid
                  description: Id of institution.
                  example: 5a62be07de34500146d9c624
    get:
      tags:
        - users.educators
      summary: Recover all educators.
      operationId: getAllEducators
      description: |
        Returns a list with educators.
        The query supports Field Selection, Paging and Sorting.
      parameters:
        - $ref: '#/components/parameters/fieldsParam'
        - $ref: '#/components/parameters/pageParam'
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/sortParam'
      responses:
        '200':
          description: Successful requisition.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Educator'

        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to get users.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the
            client for the application response. Only application/json is
            currently accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users/educators/{educator_id}:
    get:
      tags:
        - users.educators
      summary: Recover a educator by id.
      operationId: getEducatorById
      description: Returns a unique educator by id. The query supports field selection.
      parameters:
        - in: path
          name: educator_id
          required: true
          description: Id of educator.
          example: 5a62be07de34500146d9c544
          schema:
            type: string
        - $ref: '#/components/parameters/fieldsParam'
      responses:
        '200':
          description: Successful requisition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Educator'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to get user data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the
            client for the application response. Only application/json is
            currently accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - users.educators
      summary: Update Educator.
      description: Update the Educator data.
      operationId: updateEducator
      parameters:
        - in: path
          name: educator_id
          required: true
          description: Id of Educator.
          example: 5a62be07de34500146d9c544
          schema:
            type: string
      responses:
        '200':
          description: Updated Educator data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Educator'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to update user data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the client
            for the application response. Only application/json is currently
            accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: ->
            Conflicts have probably occurred with data that can not be duplicated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '415':
          description: >-
            The server does not support the requested payload format. Only
            application/json is accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: Username for educator authentication.
                  example: elvisaaron
                institution_id:
                  type: string
                  format: uuid
                  description: Id of institution.
                  example: 5a62be07de34500146d9c624
        description: Educator data to be updated.
        required: true

  # users.educators.children.groups
  /users/educators/{educator_id}/children/groups:
    post:
      tags:
        - users.educators.children.groups
      summary: Register a children group from educator.
      operationId: saveChildrenGroupFromEducator
      description: Register a new children group, and associated it with an educator.
      parameters:
        - in: path
          name: educator_id
          required: true
          description: Id of Educator.
          example: 5a62be07de34500146d9c544
          schema:
            type: string
      responses:
        '201':
          description: Children group saved sucessfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChildrenGroup'
        '400':
          description: >-
            Request can not be met, syntactically incorrect or violates the
            schema. Normally it occurs due to validation issues, such as fields
            that are expected in the request body and not passed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to register children group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the
            client for the application response. Only application/json is
            currently accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: ->
            Conflicts have probably occurred with data that can not be duplicated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '415':
          description: >-
            The server does not support the requested payload format. Only
            application / json is accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        required: true
        description: Children group to be insert.
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - children
              properties:
                name:
                  type: string
                  description: Name of the children group.
                  example: Group One
                children:
                  type: array
                  description: List of children.
                  items:
                    type: string
                    format: uuid
                  example:
                    - 5a62be07de34500146d9c544
                school_class:
                  type: string
                  description: Class of the children from group.
                  example: 4th Grade
    get:
      tags:
        - users.educators.children.groups
      summary: Recover all group of children associated with an educator.
      operationId: getAllChildrenGroupFromEducator
      description: Returns list with all groups of children associated with an educator. The query supports Field Selection, Paging and Sorting.
      parameters:
        - in: path
          name: educator_id
          required: true
          description: Id of Educator.
          example: 5a62be07de34500146d9c544
          schema:
            type: string
        - $ref: '#/components/parameters/fieldsParam'
        - $ref: '#/components/parameters/pageParam'
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/sortParam'
      responses:
        '200':
          description: Successful requisition.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChildrenGroup'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to get children group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the
            client for the application response. Only application/json is
            currently accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users/educators/{educator_id}/children/groups/{group_id}:
    get:
      tags:
        - users.educators.children.groups
      summary: Recover children group data from educator.
      operationId: getChildrenGroupFromEducatorById
      description: Recover a unique children group associated with an educator by id.
      parameters:
        - in: path
          name: educator_id
          required: true
          description: Id of Educator.
          example: 5a62be07de34500146d9c544
          schema:
            type: string
        - in: path
          name: group_id
          required: true
          description: Id of children group.
          example: 5a62be07d6f33400146c9b61
          schema:
            type: string
        - $ref: '#/components/parameters/fieldsParam'
      responses:
        '200':
          description: Successful requisition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChildrenGroup'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to get children group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the
            client for the application response. Only application/json is
            currently accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - users.educators.children.groups
      summary: Update children group data from educator.
      description: Update the children group data associated with an educator.
      operationId: updateChildrenGroupFromEducator
      parameters:
        - in: path
          name: educator_id
          required: true
          description: Id of Educator.
          example: 5a62be07de34500146d9c544
          schema:
            type: string
        - in: path
          name: group_id
          required: true
          description: Id of children group.
          example: 5a62be07d6f33400146c9b61
          schema:
            type: string
      responses:
        '200':
          description: Updated children group data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChildrenGroup'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to update children group data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the client
            for the application response. Only application/json is currently
            accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: ->
            Conflicts have probably occurred with data that can not be duplicated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '415':
          description: >-
            The server does not support the requested payload format. Only
            application/json is accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        required: true
        description: Children group to be updated.
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the children group.
                  example: Group One
                children:
                  type: array
                  description: List of children.
                  items:
                    type: string
                    format: uuid
                  example:
                    - 5a62be07de34500146d9c544
                school_class:
                  type: string
                  description: Class of the children from group.
                  example: 4th Grade
    delete:
      tags:
        - users.educators.children.groups
      summary: Delete children group data from educator.
      description: Delete the children group data associated with an educator.
      operationId: deleteChildrenGroupFromEducator
      parameters:
        - in: path
          name: educator_id
          required: true
          description: Id of Educator.
          example: 5a62be07de34500146d9c544
          schema:
            type: string
        - in: path
          name: group_id
          required: true
          description: Id of children group.
          example: 5a62be07d6f33400146c9b61
          schema:
            type: string
      responses:
        '204':
          description: Operation performed successfully. There is no data to be returned.
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to delete children group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the
            client for the application response. Only application/json is
            currently accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  # users.families
  /users/families:
    post:
      tags:
        - users.families
      summary: Register a Family.
      operationId: saveFamily
      description: |
        Register a new family.
      responses:
        '201':
          description: User saved sucessfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Family'
        '400':
          description: >-
            Request can not be met, syntactically incorrect or violates the
            schema. Normally it occurs due to validation issues, such as fields
            that are expected in the request body and not passed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to register users.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the
            client for the application response. Only application/json is
            currently accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: ->
            Conflicts have probably occurred with data that can not be duplicated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '415':
          description: >-
            The server does not support the requested payload format. Only
            application / json is accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        required: true
        description: Family to be insert.
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
                - children
              properties:
                username:
                  type: string
                  description: Username for family authentication.
                  example: elvisaaron
                password:
                  type: string
                  description: Password for family authentication.
                  example: mys3cr3tp4ss
                children:
                  type: array
                  description: List of children associated with a family.
                  items:
                    type: string
                    format: uuid
                  example:
                    - 5a62be07de34500146d9c544
                institution_id:
                  type: string
                  format: uuid
                  description: Id of institution.
                  example: 5a62be07de34500146d9c544
    get:
      tags:
        - users.families
      summary: Recover all families.
      operationId: getAllFamilies
      description: |
        Returns a list with families.
        The query supports Field Selection, Paging and Sorting.
      parameters:
        - $ref: '#/components/parameters/fieldsParam'
        - $ref: '#/components/parameters/pageParam'
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/sortParam'
      responses:
        '200':
          description: Successful requisition.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Family'

        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to get users.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the
            client for the application response. Only application/json is
            currently accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users/families/{family_id}:
    get:
      tags:
        - users.families
      summary: Recover a family by id.
      operationId: getFamilyById
      description: Returns a unique family by id. The query supports field selection.
      parameters:
        - in: path
          name: family_id
          required: true
          description: Id of family.
          example: 5a62be07de34500146d9c544
          schema:
            type: string
        - $ref: '#/components/parameters/fieldsParam'
      responses:
        '200':
          description: Successful requisition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Family'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to get user data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the
            client for the application response. Only application/json is
            currently accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - users.families
      summary: Update family.
      description: Update the family data.
      operationId: updateFamily
      parameters:
        - in: path
          name: family_id
          required: true
          description: Id of family.
          example: 5a62be07de34500146d9c544
          schema:
            type: string
      responses:
        '200':
          description: Updated family data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Family'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to update user data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the client
            for the application response. Only application/json is currently
            accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: ->
            Conflicts have probably occurred with data that can not be duplicated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '415':
          description: >-
            The server does not support the requested payload format. Only
            application/json is accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: Username for family authentication.
                  example: elvisaaron
                children:
                  type: array
                  description: List of children associated with a family.
                  items:
                    type: string
                    format: uuid
                  example:
                    - 5a62be07de34500146d9c544
                institution_id:
                  type: string
                  format: uuid
                  description: Id of institution.
                  example: 5a62be07de34500146d9c544
        description: Family data to be updated.
        required: true

  # users.families.children
  /users/families/{family_id}/children:
    get:
      tags:
        - users.families.children
      summary: Recover all children associated with a family.
      operationId: getAllChildrenFromFamily
      description: |
        Returns a list with children associated with a family.
        The query supports Field Selection, Paging and Sorting.
      parameters:
        - in: path
          name: family_id
          required: true
          description: Id of family.
          example: 5a62be07de34500146d9c544
          schema:
            type: string
        - $ref: '#/components/parameters/fieldsParam'
        - $ref: '#/components/parameters/pageParam'
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/sortParam'
      responses:
        '200':
          description: Successful requisition.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Child'

        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to get users.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the
            client for the application response. Only application/json is
            currently accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users/families/{family_id}/children/{child_id}:
    post:
      tags:
        - users.families.children
      summary: Associate a child with a family.
      operationId: associateChildToFamily
      description: Associate a child with a family by id.
      parameters:
        - in: path
          name: family_id
          required: true
          description: Id of family.
          example: 5a62be07de34500146d9c544
          schema:
            type: string
        - in: path
          name: child_id
          required: true
          description: Id of child.
          example: 5a62be07de34500146d9c544
          schema:
            type: string
      responses:
        '200':
          description: Child associated sucessfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Family'
        '400':
          description: >-
            Request can not be met, syntactically incorrect or violates the
            schema. Normally it occurs due to validation issues, such as fields
            that are expected in the request body and not passed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to associate users.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the
            client for the application response. Only application/json is
            currently accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: ->
            Conflicts have probably occurred with data that can not be duplicated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '415':
          description: >-
            The server does not support the requested payload format. Only
            application / json is accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - users.families.children
      summary: Disassociate a child from a family.
      description: Disassociate a child from a family by id.
      operationId: disassociateChildFromFamily
      parameters:
        - in: path
          name: family_id
          required: true
          description: Id of family.
          example: 5a62be07de34500146d9c544
          schema:
            type: string
        - in: path
          name: child_id
          required: true
          description: Id of child.
          example: 5a62be07de34500146d9c544
          schema:
            type: string
      responses:
        '204':
          description: Operation performed successfully. There is no data to be returned.
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to disassociate user data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the
            client for the application response. Only application/json is
            currently accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  # users.healthprofessionals
  /users/healthprofessionals:
    post:
      tags:
        - users.healthprofessionals
      summary: Register a Health Professional.
      operationId: saveHealthProfessional
      description: |
        Register a new Health Professional.
      responses:
        '201':
          description: User saved sucessfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthProfessional'
        '400':
          description: >-
            Request can not be met, syntactically incorrect or violates the
            schema. Normally it occurs due to validation issues, such as fields
            that are expected in the request body and not passed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to register users.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the
            client for the application response. Only application/json is
            currently accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: ->
            Conflicts have probably occurred with data that can not be duplicated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '415':
          description: >-
            The server does not support the requested payload format. Only
            application / json is accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        required: true
        description: Health Professional to be insert.
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                  description: Username for health professional authentication.
                  example: elvisaaron
                password:
                  type: string
                  description: Password for health professional authentication.
                  example: mys3cr3tp4ss
                institution_id:
                  type: string
                  format: uuid
                  description: Id of institution.
                  example: 5a62be07de34500146d9c624
    get:
      tags:
        - users.healthprofessionals
      summary: Recover all health professionals.
      operationId: getAllHealthProfessionals
      description: |
        Returns a list with health professionals.
        The query supports Field Selection, Paging and Sorting.
      parameters:
        - $ref: '#/components/parameters/fieldsParam'
        - $ref: '#/components/parameters/pageParam'
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/sortParam'
      responses:
        '200':
          description: Successful requisition.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HealthProfessional'

        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to get users.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the
            client for the application response. Only application/json is
            currently accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users/healthprofessionals/{healthprofessional_id}:
    get:
      tags:
        - users.healthprofessionals
      summary: Recover a health professional by id.
      operationId: getHealthProfessionalById
      description: Returns a unique health professional by id. The query supports field selection.
      parameters:
        - in: path
          name: healthprofessional_id
          required: true
          description: Id of health professional.
          example: 5a62be07de34500146d9c544
          schema:
            type: string
        - $ref: '#/components/parameters/fieldsParam'
      responses:
        '200':
          description: Successful requisition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthProfessional'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to get user data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the
            client for the application response. Only application/json is
            currently accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - users.healthprofessionals
      summary: Update Health Professional.
      description: Update the Health Professional data.
      operationId: updateHealthProfessional
      parameters:
        - in: path
          name: healthprofessional_id
          required: true
          description: Id of Health Professional.
          example: 5a62be07de34500146d9c544
          schema:
            type: string
      responses:
        '200':
          description: Updated Health Professional data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthProfessional'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to update user data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the client
            for the application response. Only application/json is currently
            accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: ->
            Conflicts have probably occurred with data that can not be duplicated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '415':
          description: >-
            The server does not support the requested payload format. Only
            application/json is accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: Username for health professional authentication.
                  example: elvisaaron
                institution_id:
                  type: string
                  format: uuid
                  description: Id of institution.
                  example: 5a62be07de34500146d9c624
        description: Health Professional data to be updated.
        required: true

  # users.healthprofessionals.children.groups
  /users/healthprofessionals/{healthprofessional_id}/children/groups:
    post:
      tags:
        - users.healthprofessionals.children.groups
      summary: Register a children group from health professional.
      operationId: saveChildrenGroupFromEducator
      description: Register a new children group, and associated it with an health professional.
      parameters:
        - in: path
          name: healthprofessional_id
          required: true
          description: Id of health professional.
          example: 5a62be07de34500146d9c544
          schema:
            type: string
      responses:
        '201':
          description: Children group saved sucessfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChildrenGroup'
        '400':
          description: >-
            Request can not be met, syntactically incorrect or violates the
            schema. Normally it occurs due to validation issues, such as fields
            that are expected in the request body and not passed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to register children group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the
            client for the application response. Only application/json is
            currently accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: ->
            Conflicts have probably occurred with data that can not be duplicated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '415':
          description: >-
            The server does not support the requested payload format. Only
            application / json is accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        required: true
        description: Children group to be insert.
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - children
              properties:
                name:
                  type: string
                  description: Name of the children group.
                  example: Group One
                children:
                  type: array
                  description: List of children.
                  items:
                    type: string
                    format: uuid
                  example:
                    - 5a62be07de34500146d9c544
                school_class:
                  type: string
                  description: Class of the children from group.
                  example: 4th Grade
    get:
      tags:
        - users.healthprofessionals.children.groups
      summary: Recover all group of children associated with a health professional.
      operationId: getAllChildrenGroupFromHealthProfessional
      description: Returns list with all groups of children associated with a health professional. The query supports Field Selection, Paging and Sorting.
      parameters:
        - in: path
          name: healthprofessional_id
          required: true
          description: Id of Health Professional.
          example: 5a62be07de34500146d9c544
          schema:
            type: string
        - $ref: '#/components/parameters/fieldsParam'
        - $ref: '#/components/parameters/pageParam'
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/sortParam'
      responses:
        '200':
          description: Successful requisition.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChildrenGroup'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to get children group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the
            client for the application response. Only application/json is
            currently accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users/healthprofessionals/{healthprofessional_id}/children/groups/{group_id}:
    get:
      tags:
        - users.healthprofessionals.children.groups
      summary: Recover children group data from health professional.
      operationId: getChildrenGroupFromHealthProfessionalById
      description: Recover a unique children group associated with a health professional by id.
      parameters:
        - in: path
          name: healthprofessional_id
          required: true
          description: Id of Health Professional.
          example: 5a62be07de34500146d9c544
          schema:
            type: string
        - in: path
          name: group_id
          required: true
          description: Id of children group.
          example: 5a62be07d6f33400146c9b61
          schema:
            type: string
        - $ref: '#/components/parameters/fieldsParam'
      responses:
        '200':
          description: Successful requisition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChildrenGroup'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to get children group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the
            client for the application response. Only application/json is
            currently accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - users.healthprofessionals.children.groups
      summary: Update children group data from health professional.
      description: Update the children group data associated with a health professional.
      operationId: updateChildrenGroupFromHealthProfessional
      parameters:
        - in: path
          name: healthprofessional_id
          required: true
          description: Id of Health Professional.
          example: 5a62be07de34500146d9c544
          schema:
            type: string
        - in: path
          name: group_id
          required: true
          description: Id of children group.
          example: 5a62be07d6f33400146c9b61
          schema:
            type: string
      responses:
        '200':
          description: Updated children group data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChildrenGroup'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to update children group data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the client
            for the application response. Only application/json is currently
            accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: ->
            Conflicts have probably occurred with data that can not be duplicated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '415':
          description: >-
            The server does not support the requested payload format. Only
            application/json is accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        required: true
        description: Children group to be update.
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the children group.
                  example: Group One
                children:
                  type: array
                  description: List of children.
                  items:
                    type: string
                    format: uuid
                  example:
                    - 5a62be07de34500146d9c544
                school_class:
                  type: string
                  description: Class of the children from group.
                  example: 4th Grade
    delete:
      tags:
        - users.healthprofessionals.children.groups
      summary: Delete children group data from health professional.
      description: Delete the children group data associated with a health professional.
      operationId: deleteChildrenGroupFromHealthProfessional
      parameters:
        - in: path
          name: healthprofessional_id
          required: true
          description: Id of Health Professional.
          example: 5a62be07de34500146d9c544
          schema:
            type: string
        - in: path
          name: group_id
          required: true
          description: Id of children group.
          example: 5a62be07d6f33400146c9b61
          schema:
            type: string
      responses:
        '204':
          description: Operation performed successfully. There is no data to be returned.
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to delete children group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the
            client for the application response. Only application/json is
            currently accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  # users.applications
  /users/applications:
    post:
      tags:
        - users.applications
      summary: Register application.
      operationId: saveApplication
      description: Register a new application.
      responses:
        '201':
          description: Application saved sucessfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
        '400':
          description: >-
            Request can not be met, syntactically incorrect or violates the
            schema. Normally it occurs due to validation issues, such as fields
            that are expected in the request body and not passed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to register applications.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the
            client for the application response. Only application/json is
            currently accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: ->
            Conflicts have probably occurred with data that can not be duplicated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '415':
          description: >-
            The server does not support the requested payload format. Only
            application / json is accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
                - application_name
              properties:
                username:
                  type: string
                  description: Username for application authentication.
                  example: elvisaaron
                password:
                  type: string
                  description: Password for application authentication.
                  example: mys3cr3tp4ss
                application_name:
                  type: string
                  description: Name of application
                  example: App_01
                institution_id:
                  type: string
                  format: uuid
                  description: Id of institution.
                  example: 5a62be07de34500146d9c624
        description: Application data to be insert.
        required: true
    get:
      tags:
        - users.applications
      summary: Recover all applications.
      operationId: getAllApplications
      description: |
        Returns a list with applications.
        The query supports Field Selection, Paging and Sorting.
      parameters:
        - $ref: '#/components/parameters/fieldsParam'
        - $ref: '#/components/parameters/pageParam'
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/sortParam'
      responses:
        '200':
          description: Successful requisition.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application'

        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to get users.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the
            client for the application response. Only application/json is
            currently accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users/applications/{application_id}:
    get:
      tags:
        - users.applications
      summary: Recover a application by id.
      operationId: getApplicationById
      description: Returns a unique application by id. The query supports field selection.
      parameters:
        - in: path
          name: application_id
          required: true
          description: Id of application.
          example: 5a62be07de34500146d9c544
          schema:
            type: string
        - $ref: '#/components/parameters/fieldsParam'
      responses:
        '200':
          description: Successful requisition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to get user data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the
            client for the application response. Only application/json is
            currently accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - users.applications
      summary: Update application.
      description: Update the Application data.
      operationId: updateApplication
      parameters:
        - in: path
          name: application_id
          required: true
          description: Id of Application.
          example: 5a62be07de34500146d9c544
          schema:
            type: string
      responses:
        '200':
          description: Updated Application data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to update user data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the client
            for the application response. Only application/json is currently
            accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: ->
            Conflicts have probably occurred with data that can not be duplicated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '415':
          description: >-
            The server does not support the requested payload format. Only
            application/json is accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: Username for application authentication.
                  example: elvisaaron
                application_name:
                  type: string
                  description: Name of application
                  example: App_01
                institution_id:
                  type: string
                  format: uuid
                  description: Id of institution.
                  example: 5a62be07de34500146d9c624
        description: Application data to be updated.
        required: true

  # institutions
  /institutions:
    post:
      tags:
        - institutions
      summary: Register institution.
      operationId: saveInstitution
      description: Register a new institution.
      responses:
        '201':
          description: Institution saved sucessfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Institution'
        '400':
          description: >-
            Request can not be met, syntactically incorrect or violates the
            schema. Normally it occurs due to validation issues, such as fields
            that are expected in the request body and not passed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to register institution.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the
            client for the application response. Only application/json is
            currently accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: ->
            Conflicts have probably occurred with data that can not be duplicated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '415':
          description: >-
            The server does not support the requested payload format. Only
            application / json is accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        required: true
        description: Institution to be insert
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Institution'
    get:
      tags:
        - institutions
      summary: Recover all institutions.
      operationId: getAllInstitutions
      description: Returns list with institutions. The query supports Field Selection, Paging and Sorting.
      parameters:
        - $ref: '#/components/parameters/fieldsParam'
        - $ref: '#/components/parameters/pageParam'
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/sortParam'
      responses:
        '200':
          description: Successful requisition.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Institution'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to get institution data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the
            client for the application response. Only application/json is
            currently accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /institutions/{institution_id}:
    get:
      tags:
        - institutions
      summary: Recover a institution by id.
      operationId: getInstitutionById
      description: Returns a unique institution by id. The query supports field selection.
      parameters:
        - in: path
          name: institution_id
          required: true
          description: Id of institution.
          example: 5a62be07de34500146d9c544
          schema:
            type: string
        - $ref: '#/components/parameters/fieldsParam'
      responses:
        '200':
          description: Successful requisition.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Institution'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to get family data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the
            client for the application response. Only application/json is
            currently accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - institutions
      summary: Update institution data.
      description: Update the institution data.
      operationId: updateInstitution
      parameters:
        - in: path
          name: institution_id
          required: true
          description: Id of institution.
          example: 5a62be07de34500146d9c544
          schema:
            type: string
      responses:
        '200':
          description: Updated institution data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Institution'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to update institution data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the client
            for the application response. Only application/json is currently
            accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: ->
            Conflicts have probably occurred with data that can not be duplicated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '415':
          description: >-
            The server does not support the requested payload format. Only
            application/json is accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Institution'
        description: Data of the institution to be updated.
        required: true
    delete:
      tags:
        - institutions
      summary: Delete institution data.
      description: Delete institution informations.
      operationId: deleteInstitution
      parameters:
        - in: path
          name: institution_id
          required: true
          description: Id of institution.
          example: 5a62be07de34500146d9c544
          schema:
            type: string
      responses:
        '204':
          description: Operation performed successfully. There is no data to be returned.
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to delete family data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the
            client for the application response. Only application/json is
            currently accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  parameters:
    fieldsParam:
      in: query
      name: fields
      required: false
      description: >-
        Allows you to retrieve only the information you want. To do this,
        simply provide the name of the attributes separated by commas.
        For example: **_fields=field1,field2_** indicates that only
        field1 and field2 should be listed in the query result.
      schema:
        type: array
        items:
          type: string
    pageParam:
      in: query
      name: page
      required: false
      description: The page number.
      schema:
        type: integer
        format: int32
        minimum: 1
        default: 1
    limitParam:
      in: query
      name: limit
      required: false
      description: The number of items to return.
      schema:
        type: integer
        format: int32
        maximum: 100
        default: 20
    sortParam:
      in: query
      name: sort
      required: false
      description: >-
        Contains the names of the attributes, separated by commas, that
        will be used to sort the result of the query. For ascending sort,
        use the '+' character before the attribute name. For descending
        sort, use the '-' character before the attribute name. By default,
        the order is ascending, so the '+' symbol is optional, just enter
        the attribute.
      schema:
        type: array
        items:
          type: string

    filterParam:
      in: query
      name: filters
      required: false
      description: >-
        To filter a collection by multiple concurrent attributes or filter
        multiple values for an attribute, simply use the attribute/property
        name with an equal sign and the expected values, separated by a comma.
        **_property=value1,value2,value3_**. The query is not case sensitive.
        Example: **_?name=elvis,john_** to retrieve exactly the same users with
        elvis or john name.
        For filtering with logical operators, just follow the syntax:
        **_property=operator:value_**. The available operators are:
         - **gt** -> Defines which value of the attribute is greater than
                    (that is,>) the specified value.
         - **gte** -> Defines which attribute value is greater than or equal to
                    (that is,>=) the specified value.
         - **lt** -> Define the value of the attribute to be less than (that is, <)
                    the specified value.
         - **lte** -> Defines which value of the attribute is less than or equal to
                    (that is, <=) the specified value.

        Example: **_?field1=gte:80&age=lt:100_** to recover the users with age
        is greater than or equal to 80 and less then 100.
      schema:
        type: string
    dateStartParam:
      in: query
      name: date_start
      required: false
      description: >-
        Define start date in format: YYYY-MM-DD ou YYYY-MM-DD hh:mm:ss. The
        attribute used for the query will be the registration_date.
      schema:
        type: string
    dateEndParam:
      in: query
      name: date_end
      required: false
      description: >-
        Define end date in format: YYYY-MM-DD ou YYYY-MM-DD hh:mm:ss.The
        attribute used for the query will be the registration_date.
      schema:
        type: string
        default: today
    periodParam:
      in: query
      name: period
      required: false
      description: |-
        Sets the period from the available ones:
         - **[1..n]d** - Total days (1d, 2d, ...)
         - **[1..n]w** - Total of weeks (1w, 2w, ...)
         - **[1..n]m** - Total of months (1m, 2m, ...)
         - **[1..n]y** - Total of years (1y, 2y, ...)

        The attribute used for the query will be the registration_date.
      schema:
        type: string
  # Reosurces
  schemas:
    # User Schema
    User:
      type: object
      required:
        - id
        - username
        - password
        - type
      properties:
        id:
          readOnly: true
          type: string
          format: uuid
          description: Automatically generated key field.
          example: 5a62be07de34500146d9c544
        username:
          type: string
          description: Username for user authentication.
          example: elvisaaron
        type:
          type: string
          description: Type of user. Can be Child, Educator, Health Professional or Family.
          enum: ["child", "educator", "healthprofessional", "family"]
        institution:
          $ref: '#/components/schemas/Institution'

    # Child Schema
    Child:
      type: object
      required:
        - id
        - username
        - gender
        - age
      properties:
        id:
          readOnly: true
          type: string
          format: uuid
          description: Automatically generated key field.
          example: 5a62be07de34500146d9c544
        username:
          type: string
          description: Username for child authentication.
          example: elvisaaron
        gender:
          type: string
          description: Gender of the child. Can be male or female.
          example: male
          enum: [male, female]
        age:
          type: number
          description: Age of the child.
          example: 11
        institution:
          $ref: '#/components/schemas/Institution'
    # ChildrenGroup Schema
    ChildrenGroup:
      type: object
      required:
        - id
        - name
        - children
      properties:
        id:
          readOnly: true
          type: string
          format: uuid
          description: Automatically generated key field.
          example: 5a62be07de34500146d9c544
        name:
          type: string
          description: Name of the children group.
          example: Group One
        children:
          type: array
          description: List of children.
          items:
            $ref: '#/components/schemas/Child'
        school_class:
          type: string
          description: Class of the children from group.
          example: 4th Grade

    # Family Schema
    Family:
      type: object
      required:
        - id
        - username
        - children
      properties:
        id:
          readOnly: true
          type: string
          format: uuid
          description: Automatically generated key field.
          example: 5a62be07de34500146d9c544
        username:
          type: string
          description: Username for family authentication.
          example: elvisaaron
        children:
          type: array
          description: List of children associated with a family.
          items:
            $ref: '#/components/schemas/Child'
        institution:
          $ref: '#/components/schemas/Institution'

    # Educator Schema
    Educator:
      type: object
      required:
        - id
        - username
      properties:
        id:
          readOnly: true
          type: string
          format: uuid
          description: Automatically generated key field.
          example: 5a62be07de34500146d9c544
        username:
          type: string
          description: Username for educator authentication.
          example: elvisaaron
        children_groups:
          type: array
          description: List of children groups.
          items:
            $ref: '#/components/schemas/ChildrenGroup'
        institution:
          $ref: '#/components/schemas/Institution'
    # HealthProfessional Schema
    HealthProfessional:
      type: object
      required:
        - id
        - username
      properties:
        id:
          readOnly: true
          type: string
          format: uuid
          description: Automatically generated key field.
          example: 5a62be07de34500146d9c544
        username:
          type: string
          description: Username for health professional authentication.
          example: elvisaaron
        children_groups:
          type: array
          description: List of children groups.
          items:
            $ref: '#/components/schemas/ChildrenGroup'
        institution:
          $ref: '#/components/schemas/Institution'

    # Application Shcema
    Application:
      type: object
      required:
        - id
        - username
      properties:
        id:
          readOnly: true
          type: string
          format: uuid
          description: Automatically generated key field.
          example: 5a62be07de34500146d9c544
        username:
          type: string
          description: Username for application authentication.
          example: elvisaaron
        application_name:
          type: string
          description: Name of application.
          example: App_01
        institution:
          $ref: '#/components/schemas/Institution'

    # Institution Schema
    Institution:
      type: object
      required:
        - id
        - type
        - name
      properties:
        id:
          readOnly: true
          type: string
          format: uuid
          description: Automatically generated key field.
          example: 5a62be07de34500146d9c624
        type:
          type: string
          description: Type of institution.
          example: Institute of Scientific Research
        name:
          type: string
          description: Name of institution.
          example: NUTES - UEPB
        address:
          type: string
          description: Address of institution.
          example: Av. Juvêncio Arruda, S/N - Universitário, Campina Grande - PB, 58429-600
        latitude:
          type: number
          description: Latitude from place's geolocation.
          example: -7.2100766
        longitude:
          type: number
          description: Longitude from place's geolocation.
          example: -35.9175756

    Error:
      type: object
      description: >-
        Default template for error message.
        All returned errors will follow this template.
      required:
        - code
        - message
        - description
      properties:
        code:
          type: integer
          description: >-
            Unique API code that indicates specific details of the error, or
            the actual status code of the response when the unique code is not
            appropriate.
        message:
          type: string
          description: Readable and short description of the error.
        description:
          type: string
          description: Detailed description of the error.